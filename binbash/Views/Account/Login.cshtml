@using binbash.Models
@model LoginViewModel
@{
    ViewBag.Title = "Log in";
}

<div class="container-fluid">
    <div class="row">
        <div class="login-card">
            <div class="card card-pad mdc-bg-grey-900 mdc-text-grey-50">
                <div class="card-body">
                    <div class="row text-center">
                        <img class="img-responsive login-logo" src="/images/logos/full-logo-light.svg" alt="Bin/Bash" />
                    </div>
                    <section class="row" id="loginForm">
                        <div class="col-sm-12">
                            @using (Html.BeginForm("Login", "Account", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { role = "form" }))
                            {
                                @Html.AntiForgeryToken()
                                <div class="card">
                                    <div class="card-heading">
                                        <div class="row text-center">
                                            <h4>User Login</h4>
                                        </div>
                                    </div>
                                    <div class="card-body">
                                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                        <div class="form-group">
                                            @Html.LabelFor(m => m.Email, new { @class = "control-label" })
                                            @Html.TextBoxFor(m => m.Email, new { @class = "form-control" })
                                            @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
                                        </div>
                                        <div class="form-group">
                                            @Html.LabelFor(m => m.Password, new { @class = "control-label" })
                                            @Html.PasswordFor(m => m.Password, new { @class = "form-control" })
                                            @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>
                                <div class="form-group">
                                    <input type="submit" value="Log in" class="btn btn-primary btn-block" />
                                </div>
                                <div class="row text-center">
                                    <p>
                                        Don't have an account?
                                        <br/>
                                        @Html.ActionLink("Register as a new user", "Register")
                                    </p>
                                </div>
                            }
                        </div>
                    </section>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
